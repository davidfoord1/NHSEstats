% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/links_by_regex.R
\name{flatten_nested_links}
\alias{flatten_nested_links}
\title{Flatten a nested list of URLs into rows of ancestry paths}
\usage{
flatten_nested_links(nested, path = character())
}
\arguments{
\item{nested}{A nested list of character vectors and/or lists, where each
level corresponds to a match from a recursive regex search. Typically the
output of \code{\link[=links_by_regex]{links_by_regex()}}.}

\item{path}{A character vector representing the ancestry path taken to reach
the current level. Used internally during recursion and should not usually
be set by the user.}
}
\value{
A list of character vectors, where each vector represents a row of
links from top-level pages down to a final download URL. The result can be
converted into a data.frame using \code{do.call(rbind, ...)}.
}
\description{
This internal function converts a recursively nested list of URLs — typically
created by \code{\link[=links_by_regex]{links_by_regex()}} — into a flat structure, where each row
represents a full ancestry path from the root (e.g. landing page) to a final
download link.
}
\details{
The input list should reflect the structure of successive regex matches at
each level of nesting, where intermediate list names correspond to matched
page URLs, and final elements are character vectors of file URLs (e.g. ZIPs).
}
\keyword{internal}
